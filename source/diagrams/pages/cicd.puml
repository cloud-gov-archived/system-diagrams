@startuml cicd
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
'https://github.com/plantuml-stdlib/C4-PlantUML

title Continuous Integration

AddRelTag("TLS", $textColor="grey", $lineColor="green", $lineStyle=BoldLine())
AddRelTag("TLS Optional", $textColor="grey", $lineColor="green", $lineStyle=DashedLine())

Boundary(aws, "AWS GovCloud") {
  Boundary(cg, "cloud.gov") {
    System(concourse, "CI", "Concourse")
    Boundary(cgp, "cloud.gov platform") {
      System(cp, "Control Plane", "cloud.gov")
      Container(app, "Pages Application", "NodeJS/nginx/Docker", $descr="The target application")
    }
  }
}

Boundary(gsa1, "GSA Authorized SaaS") {
  System_Ext(gh, "Source Control", "Github")
}

Boundary(gsa2, "GSA Authorized SaaS") {
  System_Ext(dh, "Container Registry", "DockerHub")
  System_Ext(cc, "Static Analysis", "Code Climate")
}

Person(pu, "Privileged User", "A Pages Developer")
Rel(pu, gh, "1. merges pull requst", "HTTPS 443 (T)", $tags="TLS")
note on link
  Auth: MFA
end note

Rel(concourse, gh, "2. polls for changes", "HTTPS 443 (T)", $tags="TLS")
note on link
  Auth: Token
end note

Rel(concourse, concourse, "3. runs pipeline")

Rel(concourse, cc, "4a sends analysis results", "HTTPS 443 (T)", $tags="TLS")
note on link
  Auth: Token
end note

Rel(concourse, dh, "4b. sends image", "HTTPS 443 (T)", $tags="TLS Optional")
note on link
  Auth: Credentials
end note

Rel(concourse, cp, "4c. sends source and manifest or image name", "HTTPS 443 (T)", $tags="TLS")
note on link
  Auth: Credentials
end note

Rel(concourse, gh, "4d. updates status", "HTTPS 443 (T)", $tags="TLS")
note on link
  Auth: Token
end note

Rel(cp, dh, "5a. fetches image", "HTTPS 443 (T)", $tags="TLS Optional")
note on link
  Auth: Credentials
end note

Rel(cp, app, "5b. deploys application", "internal")

SHOW_LEGEND()
@enduml